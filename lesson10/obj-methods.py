# ООП - Объектно-ориентированное программирование

# Объекты это все что есть


# Шаблон нашего нового объекта
# (ЭТО НЕ ОБЪЕКТ `Square`)
# Названия Классов С Первой БОЛЬШОЙ БУКВЫ!!!
class Square:
    # При создании экземпляра класса `Square`
    # передавался параметр(ы) для нашего нового объекта
    def __init__(self, x: int | float, name: str = "???"):
        """
        `магический метод`

        Этот метод вызывается автоматически, при создании экземпляра класса `Square`
        self это магия какая-то

        :param x: Обязательный аргумент `x` это значение, которое должно быть передано при создании
         каждого экземпляра класса `Square`
        :param name: Необязательный аргумент `name`
        """

        # Создаем новый атрибут `x` для каждого экземпляра класса `Square`
        # Но значение этого атрибута для каждого экземпляра класса `Square`
        # будет указано при создании каждого экземпляра класса `Square` и будет различаться!!!
        self.x = x
        self.name = name  # просто для примера
        self.index = 123123  # просто для примера

    def area(self) -> int | float:
        # По атрибуту `x` найдем площадь
        return self.x**2

    def perimeter(self) -> int | float:
        return self.x * 4

    def say_hello(self) -> None:   # просто для примера
        print(f"Привет, меня зовут {self.name}")


s1 = Square(10)  # Это создание экземпляра класса `Square`
s2 = Square(12.123)  # Это создание экземпляра класса `Square`
s3 = Square(0.231123, name="dsgfgdj")  # Это создание экземпляра класса `Square`
# s1 это экземпляр класса `Square`


print(s1.area())
print(s1.perimeter())

print(s2.perimeter())
print(s2.area())

print(s3.perimeter())
print(s3.area())


s3.say_hello()




