name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DJANGO_SECRET_KEY: 908r12nuinxdu1y345ui3yx190245123yx450234x53y4
  DJANGO_DEBUG: 1
  DATABASE_NAME: food
  DATABASE_USER: food_user
  DATABASE_PASSWORD: food_password
  DATABASE_HOST: localhost
  REDIS_CACHE_URL: redis://localhost:6379/0
  EMAIL_HOST_USER: asdasdasd
  DEFAULT_FROM_EMAIL: sadasdasd
  EMAIL_HOST_PASSWORD: 123123123123
  CELERY_BROKER_URL: amqp://rabbit_user:rabbit_password@localhost:5672/food
  CELERY_RESULT_BACKEND: redis://localhost:6379/1
  DOCKERHUB_IMAGE_NAME: food

jobs:
  test:

    services:
      database:
        image: postgres:16.2
        ports: 
          - "5432:5432"
        env:
          POSTGRES_DB: food
          POSTGRES_USER: food_user
          POSTGRES_PASSWORD: food_password
      redis:
        image: redis:latest
        ports:
          - "6379:6379"

      broker:
        image: rabbitmq:3.13.0-management
        env:
          RABBITMQ_DEFAULT_USER: rabbit_user
          RABBITMQ_DEFAULT_PASS: rabbit_password
          RABBITMQ_DEFAULT_VHOST: food
          RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
        ports:
          - "5672:5672"

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        cd food
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --with dev --no-interaction
    - name: Run Tests
      run: |
        cd food
        mkdir -p media/images
        python manage.py test

  build-docker-image:
    needs: ["test"]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}:latest
