def create_user(name: str, password: str, email: str, phone: str = ""):
    """
    Создает словарь пользователя, основываясь на переданных параметрах.
    Если не был передан параметр `is_superuser`, то по умолчанию будет `False`.
    """
    # "Зашифровывает пароль"
    user = {
        "name": name,
        "password": password[::-1],
        "email": email,
        "phone": phone,
    }
    return user


def create_bot_user_with_validation(notification_text: str, **kwargs):  # Запаковка `**kwargs`
    """
    Декорирует основную функцию создания пользователя.
    Проверяет email и добавляет к name суффикс `_bot`.

    Данная функция автоматически принимает бесконечное кол-во любых именованных аргументов.

    `kwargs` это словарь!

    Он принимает в себя ВСЕ именованные аргументы, которые НЕ указаны в функции.
    """
    # --------------------------------------------------------------------
    # Декоратор позволяет выполнять любые команды ДО создания пользователя
    # --------------------------------------------------------------------

    # ТУТ МЫ МЕНЯЕМ ИМЯ ПОЛЬЗОВАТЕЛЯ!!!
    # Добавляя к нему суффикс `_bot`
    kwargs["name"] += "_bot"

    print("="*50)
    print(notification_text, kwargs['name'])

    # У словаря метод .get() берет по ключу значение, если нет, то вернет None
    if kwargs.get("email"):  # Если был передан email
        # Проверяем его валидность
        if "@" not in kwargs["email"]:
            print("Неверный EMAIL!!!", kwargs["email"])

    # ========================
    # ВЫЗОВ ОСНОВНОЙ ФУНКЦИИ
    # ========================
    # Теперь все именованные аргументы, которые НЕ указаны в функции `create_user_with_notification`
    # будут переданы в функцию `create_user`
    new_user = create_user(**kwargs)  # Распаковка `**kwargs`

    # -----------------------------------------------------------------------
    # Декоратор позволяет выполнять любые команды ПОСЛЕ создания пользователя
    # -----------------------------------------------------------------------
    print(f"Пользователь {new_user['name']} был успешно создан")

    return new_user


n_text = "Создание пользователя"

create_bot_user_with_validation(
    n_text,
    name="igor",
    password="password",
    email="mail"
)

create_bot_user_with_validation(
    n_text,
    name="userw1231",
    password="password",
    email="@mail",
    sajdahsjhjkas="asjdkaksh"
)
