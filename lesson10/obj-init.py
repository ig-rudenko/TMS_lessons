# ООП - Объектно-ориентированное программирование

# Объекты это все что есть

# Шаблон нашего нового объекта
# (ЭТО НЕ ОБЪЕКТ `Square`)
# Названия Классов С Первой БОЛЬШОЙ БУКВЫ!!!
class Square:
    # При создании экземпляра класса `Square`
    # передавался параметр(ы) для нашего нового объекта
    def __init__(self, x: int, name: str = "???"):
        """
        `магический метод`

        Этот метод вызывается автоматически, при создании экземпляра класса `Square`
        self это магия какая-то

        :param x: Обязательный аргумент `x` это значение, которое должно быть передано при создании
         каждого экземпляра класса `Square`
        :param name: Необязательный аргумент `name`
        """

        # Создаем новый атрибут `x` для каждого экземпляра класса `Square`
        # Но значение этого атрибута для каждого экземпляра класса `Square`
        # будет указано при создании каждого экземпляра класса `Square` и будет различаться!!!
        self.x = x
        self.name = name
        self.index = 123123


s1 = Square(10)  # Это создание экземпляра класса `Square`
# s1 это экземпляр класса `Square`

# Назовем квадрат
s1.name = "*"

s2 = Square(20)
s3 = Square(30)
# s2, s3 тоже экземпляры класса `Square`


# Обращение к атрибуту `x`
print("Обращение к атрибуту s1.x =", s1.x)
print("Обращение к атрибуту s2.x =", s2.x)
print("Обращение к атрибуту s3.x =", s3.x)

# Обращение к атрибуту `name`
print("Обращение к атрибуту s1.name =", s1.name)
print("Обращение к атрибуту s2.name =", s2.name)
print("Обращение к атрибуту s3.name =", s3.name)

# Обращение к атрибуту `index`
print("Обращение к атрибуту s1.index =", s1.index)
print("Обращение к атрибуту s2.index =", s2.index)
print("Обращение к атрибуту s3.index =", s3.index)
